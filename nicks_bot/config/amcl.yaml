# ---------------------------------
# filter parameters
# ---------------------------------
max_particles: 200            # (int, default 5000) Maximum allowed number of particles 
min_particles: 25             # (int, default 100) Minimum allowed number of particles 
kld_err: 0.01                 # (double, default 0.01) Maximum error between the true distribution and the estimated distribution.
kld_z: 0.99
transform_tolerance: 0.2      # (double, default 0.1 seconds) Time with which to post-date the transform that is published, to indicate that this transform is valid into the future.
recovery_alpha_slow: 0.001    # (double, default 0.0 (disabled)) Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001.
recovery_alpha_fast: 0.1      # (double, default 0.0 (disabled)) Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1.
initial_pose_x: 0.0
initial_pose_y: 0.0
initial_pose_a: 0.0  
use_map_topic: true  
# ---------------------------------
# Laser model parameters
# ---------------------------------
laser_min_range: -1.0     # Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used.
laser_max_range: -1.0     # Maximum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used.
laser_max_beams:  30      # (int, default 30) How many evenly-spaced beams in each scan to be used when updating the filter.
laser_z_hit:     0.95     # (double, default 0.95) Mixture weight for the z_hit part of the model.
laser_z_short:   0.1      # (double, default 0.1) Mixture weight for the z_short part of the model.
laser_z_max:     0.05     # (double, default 0.05) Mixture weight for the z_max part of the model.
laser_z_rand:    0.05     # (double, default 0.05) Mixture weight for the z_rand part of the model.
laser_sigma_hit: 0.2      # (double, default 0.2 meters) Standard deviation for Gaussian model used in z_hit part of the model.
laser_lambda_short: 0.1   # (double, default 0.1) Exponential decay parameter for z_short part of model.
laser_likelihood_max_dist: 2.0 # (double, default 2.0 meters) Maximum distance to do obstacle inflation on map, for use in likelihood_field model.
laser_model_type: "likelihood_field_prob" # (string, default "likelihood_field") Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled).
# ---------------------------------
# Odometry model parameters
# ---------------------------------
odom_model_type: "diff-corrected"   # (string, default "diff") Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected".
odom_alpha1: 0.005                  # (double, default 0.2) Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion.
odom_alpha2: 0.005                  # (double, default 0.2) Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion.
odom_alpha3: 0.005                  # (double, default 0.2) Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion.
odom_alpha4: 0.005                  # (double, default 0.2) Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion.
odom_frame_id: "odom"               # (string, default "odom") Which frame to use for odometry.
base_frame_id: "base_link"          # (string, default "base_link") Which frame to use for the robot base
global_frame_id: "map"              # (string, default "map") The name of the coordinate frame published by the localization system
tf_broadcast: true                  # (bool, default true) Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame.

